FROM golang:1.20.1-alpine3.17

# WORKDIR /go/src/ipaas/
# RUN mkdir tmp
# COPY responser/ /go/src/ipaas/responser/

# COPY go.mod go.sum /go/src/ipaas/
# RUN go mod download 

# COPY .env /go/src/ipaas/

# COPY *.go /go/src/ipaas/
# RUN go build -o ipaas

# CMD ./ipaas


# FROM docker as docker

# FROM golang:1.20.1-alpine3.17 as modules
# COPY go.mod go.sum /modules/
# WORKDIR /modules
# RUN go mod download

# FROM golang:1.20.1-alpine3.17 as builder
# COPY --from=modules /go/pkg /go/pkg
# COPY . /app
# WORKDIR /app
# RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \
#     go build  -o /bin/app .

# FROM scratch
# # use these 3 lines for debugging purposes
# # FROM ubuntu 
# # RUN apt update
# # RUN apt install -y git curl iputils-ping
# COPY --from=docker /usr/local/bin/docker /usr/local/bin/docker
# COPY --from=docker /usr/local/libexec/docker/cli-plugins/docker-buildx /usr/local/libexec/docker/cli-plugins/docker-buildx
# COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
# COPY --from=builder /app/config /config
# COPY --from=builder /bin/app /app
# CMD ["/app"]

# # Metadata
# LABEL org.opencontainers.image.vendor="IPaaS" \
#     org.opencontainers.image.source="https://github.com/ipaas-org/ipaas-backend" \
#     org.opencontainers.image.title="ipaas-backend" \
#     org.opencontainers.image.description="A monolith version of ipaas" \
#     org.opencontainers.image.version="v0.0.1"